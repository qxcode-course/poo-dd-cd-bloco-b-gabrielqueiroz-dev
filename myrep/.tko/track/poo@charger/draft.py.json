{
    "patches": [
        {
            "label": "2025-10-28_16-08-50",
            "content": "class Bateria:\n  def __init__(self, capacidade: int):\n    self.__carga: int = capacidade\n    self.__capacidade: int = capacidade\n\n  def setCarga(self, carga: int):\n    if 0 > carga:\n      print(\"fail: carga inv\u00e1lida\")\n      return\n    \n    if carga > self.__capacidade:\n      self.__carga = self.__capacidade\n      return\n\n    self.__carga = carga\n\n  def getCarga(self):\n    return self.__carga\n  \n  def mostrar(self):\n    print(self)\n  \n  def __str__(self):\n    return f\"{self.__carga}/{self.__capacidade}\"\n  \n\n\nclass Carregador:\n  def __init__(self, potencia: int):\n    self.__potencia: int = potencia\n\n  def getPotencia(self):\n    return self.__potencia\n  \n  def setPotencia(self, potencia: int):\n    self.__potencia = potencia\n\n  def mostrar(self):\n    print(self)\n\n  def __str__(self):\n    return f\"{self.__potencia}W\"\n\n\n\nclass Notebook:\n  def __init__(self):\n    self.__ligado: bool = False\n    self.__bateria: Bateria | None = None\n    self.__carregador: Carregador | None = None\n    self.__uso: int = 0\n\n  def setLigado(self, ligado: bool):\n    self.__ligado = ligado\n\n  def getLigado(self):\n    return self.__ligado\n  \n  def setBateria(self, bateria: Bateria):\n    self.__bateria = bateria\n\n  def getBateria(self):\n    return self.__bateria\n\n  def setCarregador(self, carregador: Carregador):\n    if self.getCarregador() != None:\n      print(\"fail: carregador j\u00e1 conectado\")\n      return\n    self.__carregador = carregador\n\n  def getCarregador(self):\n    return self.__carregador\n  \n  def rmCarregador(self):\n    if self.getCarregador() == None:\n      print(\"fail: Sem carregador\")\n      return\n    \n    if self.getBateria() == None:\n      self.desligar()\n\n    carregador_removido = self.getCarregador()\n    self.__carregador = None\n    return carregador_removido\n\n  def rmBateria(self):\n    bateria_removida = self.getBateria()\n\n    if bateria_removida == None:\n      print(\"fail: Sem bateria\")\n      return\n    \n    if self.getCarregador() == None:\n      self.desligar()\n\n    self.__bateria = None\n    return bateria_removida\n  \n  def ligar(self):\n    if self.getBateria() == None and self.getCarregador() == None:\n      print(\"fail: n\u00e3o foi poss\u00edvel ligar\")\n      return\n\n    if self.getBateria() != None and self.getBateria().getCarga() == 0 and self.getCarregador() == None:\n      print(\"fail: bateria sem carga\")\n      return\n\n    self.setLigado(True)\n\n  def desligar(self):\n    self.setLigado(False)\n  \n  def usar(self, minutes: int):\n    if not self.getLigado():\n      print(\"fail: desligado\")\n      return\n\n    if self.getBateria() != None and \\\n        self.getBateria().getCarga() <= minutes and \\\n        self.getCarregador() == None:\n      self.__uso += self.getBateria().getCarga()\n      self.getBateria().setCarga(0)\n      self.desligar()\n      print(\"fail: descarregou\")\n      return\n    \n    if self.getCarregador() != None and self.getBateria() != None:\n      self.getBateria().setCarga(\n        self.getCarregador().getPotencia() * minutes + self.getBateria().getCarga()\n      )\n      self.__uso += minutes\n    elif self.getCarregador() != None and self.getBateria() == None:\n      self.__uso += minutes\n    elif self.getBateria() != None:\n      self.getBateria().setCarga(self.getBateria().getCarga() - minutes)\n      self.__uso += minutes\n\n  def getUso(self):\n    return self.__uso\n\n  def mostrar(self):\n    print(self)\n\n  def __str__(self):\n    finalString = \"\"\n\n    finalString += f\"Notebook: {f\"ligado por {self.getUso()} min\" if self.getLigado() else \"desligado\"}\"\n\n    if self.getCarregador() != None:\n      finalString += f\", Carregador {self.getCarregador()}\"\n    \n    if self.getBateria() != None:\n      finalString += f\", Bateria {self.getBateria()}\"\n    \n    return finalString\n\nnotebook = Notebook() # criando notebook\ncarregador = None\nbateria = None\n\nwhile True:\n  comando = input()\n  print(f\"${comando}\")\n  args = comando.split()\n\n  if args[0] == \"end\":\n    break\n\n  elif args[0] == \"init\":\n    notebook = Notebook()\n    print(\"notebook criado\")\n\n  elif args[0] == \"show\":\n    notebook.mostrar()\n\n  elif args[0] == \"turn_on\":\n    notebook.ligar()\n\n  elif args[0] == \"turn_off\":\n    notebook.desligar()\n\n  elif args[0] == \"use\":\n    notebook.usar(int(args[1]))\n\n  elif args[0] == \"bateria\":\n    bateria = Bateria(int(args[1]))\n    print(\"bateria criada\")\n\n  elif args[0] == \"set_battery\":\n    bateria = Bateria(int(args[1]))\n    notebook.setBateria(bateria)\n\n  elif args[0] == \"rm_battery\":\n    bateria = notebook.rmBateria()\n    if bateria != None:\n      print(f\"Removido {bateria}\")\n\n  elif args[0] == \"set_charger\":\n    carregador = Carregador(int(args[1]))\n\n    notebook.setCarregador(carregador)\n\n  elif args[0] == \"rm_charger\":\n    carregador = notebook.rmCarregador()\n    if carregador != None:\n      print(f\"Removido {carregador}\")\n  \n  else:\n    print(\"fail: comando inv\u00e1lido\")\n    ",
            "lines": "210"
        }
    ]
}